spring:
  application:
    name: rapidobackup-console

  profiles:
    active: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/rb-console
    username: rb-console-admin
    password: ${DB_PASSWORD:}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true

  jpa:
    database: POSTGRESQL
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time-zone: UTC
        format_sql: true
        ddl-auto: validate
        id:
          new_generator_mappings: true
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: false
          region.factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

  liquibase:
    change-log: classpath:config/liquibase/changelog/master.xml

  # R2DBC Configuration for reactive database access (agents module)
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/rb-console
    username: rb-console-admin
    password: ${DB_PASSWORD:}
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: 30m
      validation-query: SELECT 1

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 3600000
      key-prefix: "console:"
      use-key-prefix: true
      cache-null-values: false

  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:admin123}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  web:
    locale: en
    locale-resolver: fixed

  messages:
    basename: i18n/messages
    encoding: UTF-8
    cache-duration: 3600

  docker:
    compose:
      enabled: true
      lifecycle-management: start-only
      file: src/main/docker/services.yml

server:
  port: 8080
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
  forward-headers-strategy: native
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false
  servlet:
    session:
      cookie:
        name: RBSESSIONID
        http-only: true
        secure: false
        same-site: lax
        path: /

logging:
  level:
    ROOT: INFO
    com.rapidobackup.console: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.session: DEBUG
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%15.15t] %-40.40logger{39} : %m%n%wEx"

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health, info, prometheus, metrics
  endpoint:
    health:
      show-details: when-authorized
      roles: 'ADMIN'

# Application specific configuration
console:
  version: @project.version@

  agent:
    heartbeat-interval: 30s
    command-timeout: 5m
    max-concurrent-connections: 1000
    long-polling:
      timeout: 30000 # 30 seconds
      max-queue-size: 100

  backup:
    max-concurrent-jobs: 10
    default-retention-days: 30

  cors:
    allowed-origins: "http://localhost:3000,http://localhost:3001"
    allowed-methods: "*"
    allowed-headers: "*"
    exposed-headers: "Authorization,Link,X-Total-Count"
    allow-credentials: true
    max-age: 1800

  internationalization:
    default-locale: en
    supported-locales: en,fr,es

# SpringDoc OpenAPI 3 Configuration
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
    resolve-schema-properties: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: true
    filter: true
    display-request-duration: true
  cache:
    disabled: true
  override-with-generic-response: false
  auto-tag-classes: true
  model-and-view-allowed: true

  # Export OpenAPI spec to file during development
  writer-with-default-pretty-printer: true

  # Group configuration for API documentation
  group-configs:
    - group: 'auth'
      display-name: 'Authentication API'
      paths-to-match: '/api/auth/**'
    - group: 'agents'
      display-name: 'Agents API'
      paths-to-match: '/api/agents/**'
    - group: 'users'
      display-name: 'Users API'
      paths-to-match: '/api/users/**'