{
  "name": "rb-console",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "//": "=== HELP ===",
    "help": "echo '\n=== RapidoBackup Console Scripts ===\n🚀 Development:\n  dev: Start development server with API generation\n  preview: Preview production build locally\n\n🏗️ Build:\n  build: Build for production with TypeScript compilation\n  webapp:build: Clean and build webapp\n\n🔧 API Generation:\n  api:generate: Generate TypeScript client from OpenAPI spec\n  api:generate:if-changed: Generate only if API spec changed\n  api:watch: Watch API spec and regenerate on changes\n\n🧹 Cleanup:\n  clean-www: Clean static files\n  cleanup: Clean all build artifacts\n  api:clean: Clean generated API client\n\n⚙️ Services:\n  services:up: Start Docker services (PostgreSQL + Redis)\n\n📋 Code Quality:\n  lint: Run ESLint on all files'",

    "//": "=== DEVELOPMENT ===",
    "dev": "npm run api:generate:if-changed && vite",
    "//dev": "Start development server with conditional API generation",
    "preview": "vite preview",
    "//preview": "Preview production build locally",

    "//": "=== BUILD ===",
    "build": "npm run api:generate:if-changed && tsc -b && vite build",
    "//build": "Build for production with TypeScript compilation and API generation",
    "vite-build": "npm run build",
    "//vite-build": "Alias for build command",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev --",
    "//webapp:build": "Clean and build webapp (Maven integration)",
    "webapp:build:dev": "npm run vite-build",
    "//webapp:build:dev": "Development webapp build",
    "webapp:build:prod": "npm run vite-build",
    "//webapp:build:prod": "Production webapp build",

    "//": "=== API GENERATION ===",
    "api:generate": "openapi-generator-cli generate",
    "//api:generate": "Generate TypeScript client from OpenAPI specification",
    "api:generate:if-changed": "powershell -Command \"& { if (Test-Path 'src/main/resources/openapi/api.yml') { $apiHash = (Get-FileHash 'src/main/resources/openapi/api.yml' -Algorithm MD5).Hash; $hashFile = '.api-hash'; if (!(Test-Path $hashFile) -or $apiHash -ne (Get-Content $hashFile -Raw -ErrorAction SilentlyContinue).Trim()) { Write-Host 'API spec changed, regenerating client...'; npm run api:generate; $apiHash | Out-File $hashFile -NoNewline } else { Write-Host 'API spec unchanged, skipping generation.' } } else { Write-Host 'API spec not found, skipping generation.' } }\"",
    "//api:generate:if-changed": "Generate API client only if OpenAPI spec has changed (MD5 hash check)",
    "api:watch": "chokidar \"src/main/resources/openapi/api.yml\" -c \"npm run api:generate\"",
    "//api:watch": "Watch OpenAPI spec file and regenerate client on changes",
    "api:clean": "rimraf src/main/webapp/src/lib/generated",
    "//api:clean": "Remove generated API client files",

    "//": "=== CLEANUP ===",
    "clean-www": "rimraf target/classes/static/",
    "//clean-www": "Remove compiled static web assets",
    "cleanup": "rimraf target/",
    "//cleanup": "Remove all Maven build artifacts",

    "//": "=== SERVICES ===",
    "services:up": "docker compose -f src/main/docker/services.yml up --wait",
    "//services:up": "Start PostgreSQL and Redis services via Docker Compose",

    "//": "=== CODE QUALITY ===",
    "lint": "eslint .",
    "//lint": "Run ESLint on all TypeScript and JavaScript files",
    "prepare": "husky",
    "//prepare": "Setup Git hooks with Husky (runs on npm install)"
  },
  "dependencies": {
    "@radix-ui/react-avatar": "^1.1.9",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.10",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.13",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@tailwindcss/vite": "^4.1.6",
    "@tanstack/react-query": "^5.86.0",
    "@tanstack/react-query-devtools": "^5.86.0",
    "@types/react-router-dom": "^5.3.3",
    "axios": "^1.11.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "i18next": "^25.2.1",
    "i18next-browser-languagedetector": "^8.2.0",
    "lucide-react": "^0.510.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-i18next": "^15.5.3",
    "react-router-dom": "^7.6.2",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@eslint/js": "^9.25.0",
    "@openapitools/openapi-generator-cli": "^2.23.4",
    "@types/node": "^22.15.18",
    "@types/react": "^19.1.2",
    "@types/react-dom": "^19.1.2",
    "@vitejs/plugin-react": "^4.4.1",
    "autoprefixer": "^10.4.21",
    "chokidar-cli": "^3.0.0",
    "eslint": "^9.25.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^16.0.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.2",
    "postcss": "^8.5.3",
    "prettier": "^3.5.3",
    "rimraf": "5.0.8",
    "shadcn": "^3.2.1",
    "tailwindcss": "^4.1.7",
    "tw-animate-css": "^1.3.4",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.30.1",
    "vite": "^6.3.5"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=22.15.0"
  },
  "cacheDirectories": [
    "node_modules"
  ]
}
